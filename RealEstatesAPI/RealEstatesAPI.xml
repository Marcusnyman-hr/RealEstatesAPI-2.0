<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RealEstatesAPI</name>
    </assembly>
    <members>
        <member name="M:RealEstatesAPI.Controllers.AccountsController.Register(Entities.Models.RegisterModel)">
            <summary>
            Register a new user
            </summary>
            <remarks>
            Register a new user/account with standard privs (user)
            </remarks>
            <returns>
            </returns>
        </member>
        <member name="M:RealEstatesAPI.Controllers.AccountsController.Login(Entities.Models.LoginModel)">
            <summary>
            Retrieves a JWT token for a registered user
            </summary>
            <remarks>
            Retrieves a JWT token for a registered user, the token is valid for 14 days.
            </remarks>
            <returns>
            </returns>
        </member>
        <member name="M:RealEstatesAPI.Controllers.CommentsController.GetCommentsForRealEstate(System.String,Helpers.ResourceParameters.SkipAndTakeRP)">
            <summary>
            Retrieves comments for realestate
            </summary>
            <remarks>
            Retrieves all comments (caps at 100) for a specific realestate by provided realestate Id
            Also accepts skip and take parameters
            all results are ordered on creation date
            </remarks>
            <returns>
            </returns>
        </member>
        <member name="M:RealEstatesAPI.Controllers.CommentsController.GetComment(System.String)">
            <summary>
            Retrieves a specific comment
            </summary>
            <remarks>
            Retrieves specific comment by the provided commentId
            </remarks>
            <returns>
            </returns>
        </member>
        <member name="M:RealEstatesAPI.Controllers.CommentsController.GetCommentsByUser(System.String,Helpers.ResourceParameters.SkipAndTakeRP)">
            <summary>
            Retrieves all comments by user
            </summary>
            <remarks>
            Retrieves all comments by a specific user (caps at 100)
            also accepts skip and take parameters
            all results are ordered on creation date.
            </remarks>
            <returns>
            </returns>
        </member>
        <member name="M:RealEstatesAPI.Controllers.CommentsController.PostComment(RealEstatesAPI.DTOS.CreateCommentDto)">
            <summary>
            Creates a new comment 
            </summary>
            <remarks>
            Creates a new comment for a specific realestate
            Example body:
            {
               "Content": "It's a trap! Don't go there!",
                "UserName": "somerandomguy",
                "CreatedOn": "2015-11-22T16:25:49.29"
            }
            </remarks>
            <returns>
            </returns>
        </member>
        <member name="M:RealEstatesAPI.Controllers.RealEstatesController.GetRealEstates(Helpers.ResourceParameters.SkipAndTakeRP)">
            <summary>
            Get all realEstates, can be used with optional skip/take parameters!
            </summary>
            <remarks>
            To get all realestates (caps at a 100) leave skip and take blank
            skip=3, take=5 would get the realestate no 4-8 in a list ordered by date when posted
            </remarks>
            <returns></returns>
        </member>
        <member name="M:RealEstatesAPI.Controllers.RealEstatesController.GetRealEstatesByUsername(System.String)">
            <summary>
            Get all realestates by username
            </summary>
            <remarks>
            Gets all realestates posted by a user, sorted on when they were created.
            
            </remarks>
            <returns></returns>
        </member>
        <member name="M:RealEstatesAPI.Controllers.RealEstatesController.GetRealEstate(System.Guid)">
            <summary>
            Get a specific RealEstate
            </summary>
            <remarks>
            Gets the specific realestate by providing an Id (guid)
            If A valid baerer token is provided, the result will contain comments and contactinfo.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:RealEstatesAPI.Controllers.RealEstatesController.CreateRealEstate(RealEstatesAPI.DTOS.CreateRealEstateDto)">
             <summary>
             Creates a new repository in the database
             </summary>
             <remarks>
             Creates a new realestate in the database by providing a valid json body
             Example body:
            {
                "Title": "Some very interesting office",
                "Description": "You will love it. The view is great!",
                "Address": "Mladost 1A, Telerik Academy building",
                "Contact": "0888-888-888",
                "ConstructionYear": 2005,
                "SellingPrice": 120000,
                "RentingPrice": 500,
                "Type": 2
            }
             </remarks>
             <returns></returns>
        </member>
        <member name="M:RealEstatesAPI.Controllers.RealEstatesController.AddPicture(System.Guid,Entities.Models.FileUpload)">
            <summary>
            Uploads a picture file
            </summary>
            <remarks>
            Uploads a picture for a specific realEstate (by id)
            
            </remarks>
            <returns>
            </returns>
        </member>
        <member name="M:RealEstatesAPI.Controllers.UsersController.RateUser(RealEstatesAPI.DTOS.RateUserDto)">
            <summary>
            Rate a user
            </summary>
            <remarks>
            Rate a user with a value from 1-5
            </remarks>
            <returns>
            </returns>
        </member>
        <member name="M:RealEstatesAPI.Controllers.UsersController.RateByUserName(RealEstatesAPI.DTOS.RateUserByUserNameDto)">
            <summary>
            Get stats for user
            </summary>
            <remarks>
            rate a user by ther username
            </remarks>
            <returns>
            </returns>
        </member>
    </members>
</doc>
